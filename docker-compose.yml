services:

    agile:
        container_name: agile
        hostname: agile
        labels:
            description: TFM Enrique González Macías
            name: agile
        tty: true
        build: 
            context: .
            dockerfile: Dockerfile.agile
        restart: on-failure
        user: root
        environment:
            JUPYTER_ENABLE_LAB: "yes"
            GRANT_SUDO: "yes"
            JUPYTER_ALLOW_INSECURE_WRITES: "true"
            ORCHESTRATE_ON_START: "true"
            AUTO_CHAIN_PREDICT_AFTER_TRAIN: "true"
        depends_on:
            - elastic
            - mongo
            - mongo-express
        ports:
            - "8888:8888"
            - "5001:5000"
            - "8080:8080"
        volumes:
            - ./:/home/jovyan
            - ./scripts:/scripts
        command: >
            bash -lc "/scripts/start-spark-cluster.sh &&
                    start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
        networks:
            - agile_net

    elastic:
        container_name: elastic
        hostname: elastic
        labels:
            description: TFM Enrique González Macías
            name: elastic
        tty: True
        image: docker.elastic.co/elasticsearch/elasticsearch:9.1.2
        restart: always
        environment:
            cluster.name: "es-docker"
            discovery.type: single-node
            node.name: "elastic"
            ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
            xpack.security.enabled: "false"
            xpack.security.enrollment.enabled: "false"
            xpack.security.http.ssl.enabled: "false"
        ports:
            - "9200:9200"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elastic_data:/usr/share/elasticsearch/data
            - ./logs:/usr/share/elasticsearch/logs
        networks:
            - agile_net
        healthcheck:
            test: ["CMD", "curl", "-fsS", "http://elastic:9200"]
            interval: 10s
            timeout: 5s
            retries: 12

    mongo:
        container_name: mongo
        hostname: mongo
        labels:
            description: TFM Enrique González Macías
            name: mongo
        image: mongo:5.0.3
        restart: always
        ports:
            - "27017:27017"
        volumes:
            - mongo_data:/data/db
        networks:
            - agile_net

    mongo-express:
        container_name: mongo-express
        hostname: mongo-express
        labels:
            description: TFM Enrique González Macías
            name: mongo-express
        image: mongo-express:0.54.0
        depends_on:
            - mongo
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
        networks:
            - agile_net

    kafka:
        container_name: kafka
        hostname: kafka
        labels:
            description: TFM Enrique González Macías
            name: kafka
        image: bitnami/kafka:3.6
        environment:
            - KAFKA_CFG_NODE_ID=1
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:29093
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        ports:
            - "9092:9092"
        networks:
            - agile_net
    
    kibana:
        container_name: kibana
        hostname: kibana
        image: docker.elastic.co/kibana/kibana:9.1.2
        restart: always
        environment:
            ELASTICSEARCH_HOSTS: "http://elastic:9200"
            CSP_STRICT: "false"
            CSP_WARNLEGACYBROWSERS: "true"
            XPACK_SECURITY_ENABLED: "false"
            XPACK_SECURITY_SAMESITECOOKIES: "Lax"
            XPACK_SECURITY_SECURECOOKIES: "false"
        ports:
            - "5601:5601"
        depends_on:
            - elastic
        networks:
            - agile_net
        healthcheck:
            test: ["CMD", "curl", "-fsS", "http://kibana:5601/api/status"]
            interval: 10s
            timeout: 5s
            retries: 24
            start_period: 30s

    predict_api:
        build:
            context: .
            dockerfile: Dockerfile.predict_api
        container_name: predict_api
        hostname: predict_api
        depends_on:
            elastic:
                condition: service_healthy
            kibana:
                condition: service_healthy
            kafka:
                condition: service_started
            mongo:
                condition: service_started
            agile:
                condition: service_started
        environment:
            ELASTIC_URL: "http://elastic:9200"
            KIBANA_URL: "http://kibana:5601"
        ports:
            - "5050:5050"   
        restart: unless-stopped
        networks:
            - agile_net

volumes:
    elastic_data:
    mongo_data:

networks:
    agile_net:
        name: agile_net
        driver: bridge
